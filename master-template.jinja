resources:

## NETWORK
- name: {{ env["deployment"] }}-network
  type: compute.v1.network
  properties:
    autoCreateSubnetworks: false
    region: us-east1

- name: public-subnet
  type: subnetwork_template.jinja
  properties:
    cidr: 10.155.192.0/19
    subnet_name: public-subnet
    region: us-east1

- name: app-web-subnet
  type: subnetwork_template.jinja
  properties:
    cidr: 10.155.0.0/18
    subnet_name: app-web-subnet
    region: us-east1

- name: db-subnet
  type: subnetwork_template.jinja
  properties:
    cidr: 10.155.128.0/19
    subnet_name: db-subnet
    region: us-east1

## LOAD BALANCERS

## Static IP for Front Load Balancer
- type: compute.v1.address
  name: {{ env["deployment"] }}-lb-address
  properties:
    region: us-east1

# Create and define a Backend service
#
# - name: generic-backend-service
#   type: compute.v1.backendService
#   properties:
#       protocol: HTTP
#       healthChecks:
#         - $(ref.http-basic-check.selfLink)


# Create a basic HTTP health check
#
- name: http-basic-check
  type: compute.v1.httpHealthCheck

# targetPool
#
# - name: app-tier-target-pool
#   type: compute.v1.targetPool
#   properties:
#     region: us-east1
#     healthChecks:
#       - $(ref.http-basic-check.selfLink)

# - name: public-subnet-firewall
#   type: public_fw.jinja
#   properties:
#     network: $(ref.public-subnet.selfLink)

# - name: app-web-subnet-firewall
#   type: app-web_fw.jinja
#   properties:
#     network: $(ref.app-web-subnet.selfLink)

# - name: db-firewall
#   type: db_fw.jinja
#   properties:
#     network: $(ref.db-subnet.selfLink)